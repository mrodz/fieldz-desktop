//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, PartialOrd, Ord,
)]
#[sea_orm(table_name = "coach_conflict_team_join")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub coach_conflict: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub team: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::coach_conflict::Entity",
        from = "Column::CoachConflict",
        to = "super::coach_conflict::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CoachConflict,
    #[sea_orm(
        belongs_to = "super::team::Entity",
        from = "Column::Team",
        to = "super::team::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Team,
}

impl Related<super::coach_conflict::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CoachConflict.def()
    }
}

impl Related<super::team::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Team.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
